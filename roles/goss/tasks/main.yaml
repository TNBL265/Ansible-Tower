- name: Set fact for Ubuntu20
  set_fact:
    git_repo: "ansible-lockdown-ubuntu20-audit"
    branch: "dev"
    python_arg: "ubuntu20"
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "20.04"

- name: Set fact for Amazon2
  set_fact:
    git_repo: "ansible-lockdown-amazon2-audit"
    branch: "master"
    python_arg: "amazon_linux2"
  when: ansible_distribution == "Amazon" and ansible_distribution_version == "2"

- name: Set fact for RHEL 8
  set_fact:
    git_repo: "ansible-lockdown-rhel8-audit"
    branch: "dev"
    python_arg: "rhel8"
  when: ansible_distribution == "RedHat" and ansible_distribution_version == "8.0"

- name: Clone audit repo
  git:
    repo: "https://{{ git_username }}:{{ git_password }}@bitbucket.it.keysight.com/scm/kps011/{{ git_repo }}.git"
    dest: "/var/tmp/{{ git_repo }}"
    single_branch: yes
    version: "{{ branch }}"

- name: Copy over lookup table to audit repo
  copy:
    src: "CIS_rule_lookup_table.json"
    dest: "/var/tmp/{{ git_repo }}/CIS_rule_lookup_table.json"

- name: Run goss audit
  shell: "/var/tmp/{{ git_repo }}/run_audit.sh"
  register:
    goss_out

- name: Grep json report name
  shell: echo "{{ goss_out.stdout }}" | grep "/var/tmp/audit_ansible-lockdown-.*.json" -o
  register:
    json_out

- name: Run python conversion
  script: "audit_report_filtration.py /var/tmp/{{ git_repo }}/CIS_rule_lookup_table.json {{ python_arg }} {{ json_out.stdout }}"
  args:
    executable: "{{ ansible_python['executable'] }}"
  register:
    python_out

- name: Get python output
  debug:
    msg: "{{ python_out.stdout }}"

- name: Remove audit repo
  file:
    path: "/var/tmp/{{ git_repo }}"
    state: absent

- name: Remove json report
  file:
    path: "{{ json_out.stdout }}"
    state: absent

- name: Remove .ansible
  file:
    path: "/home/{{ ansible_user }}/.ansible"
    state: absent
